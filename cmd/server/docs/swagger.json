{
    "swagger": "2.0",
    "info": {
        "description": "API documentation for project GitForGits\nLogin as admin:\nemail: admingitforgits12@gmail.com\npassword: @GitForGitsAdmin21",
        "title": "GitForGits API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/admin/users/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get List User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/users.SuccessGetList"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/users.UserNotFoundResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a single user by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Users ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.SuccessGetUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/users.InvalidId"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/users.UserNotFoundResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Account",
                        "name": "Auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.SuccessGetList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/users.InvalidId"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/users.UserNotFoundResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/users.EmailAlreadyUsed"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/users.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.SuccessDeleteUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/users.InvalidId"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/users.UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/users.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login Account",
                "parameters": [
                    {
                        "description": "Login Account",
                        "name": "Auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.SuccessLogin"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.ErrorResponseLogin"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logout from account users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout Account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.SuccessLogout"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Account User to see their data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Me Account",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.SuccessLogin"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.ErrorResponseAuth"
                        }
                    }
                }
            }
        },
        "/auth/me/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Update Account",
                "parameters": [
                    {
                        "description": "Update Account",
                        "name": "Auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.SuccessUpdate"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.ErrorUnauthorized"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.ErrorResponseLogin"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.ErrorResponseAuth"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "get access token in the token expired",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "get access token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.SuccessAccessToken"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.ErrorUnauthorized"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create Account with Register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create Account",
                "parameters": [
                    {
                        "description": "Create Account",
                        "name": "Auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.SuccessRegis"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_auth.ErrorResponseAuth"
                        }
                    }
                }
            }
        },
        "/books": {
            "get": {
                "description": "Retrieve all books from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get all books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.SuccessGetListBook"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new book to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Create a new book",
                "parameters": [
                    {
                        "description": "Book data",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.BookRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.SuccessfullCreate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.MissingAuthorization"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.TitleAlreadytaken"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "description": "Retrieve a single book by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get book by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.SuccessGetBook"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update book information by its ID, u have to login first to access your access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Update book by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated book data",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.BookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.SuccessfullUpdate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.InvalidId"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.BookNotFoundResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a book from the database using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Delete book by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.DeleteSuccesfully"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.InvalidId"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.BookNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_dto_book.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_qhmd_gitforgits_internal_domain_auth.Auth": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_domain_book.Book": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string",
                    "example": "John Smith"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer",
                    "example": 205
                },
                "title": {
                    "type": "string",
                    "example": "How To Become Backend Engineer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_auth.ErrorResponseAuth": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "something went wrong"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_auth.ErrorResponseLogin": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "email already used"
                },
                "message": {
                    "type": "string",
                    "example": "try another email"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_auth.ErrorUnauthorized": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "missing refresh token"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_auth.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_auth.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_auth.SuccessAccessToken": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1hZGRla2U0N..."
                },
                "message": {
                    "type": "string",
                    "example": "success to access token"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_auth.SuccessLogin": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_domain_auth.Auth"
                },
                "message": {
                    "type": "string",
                    "example": "success to login"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_auth.SuccessLogout": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "success to log out"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_auth.SuccessRegis": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_domain_auth.Auth"
                },
                "message": {
                    "type": "string",
                    "example": "successfull created"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_auth.SuccessUpdate": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_domain_auth.Auth"
                },
                "message": {
                    "type": "string",
                    "example": "updated successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_book.BookNotFoundResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "string",
                    "example": "book with id {id} does not exist"
                },
                "message": {
                    "type": "string",
                    "example": "book not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_book.BookRequest": {
            "type": "object",
            "required": [
                "author",
                "page",
                "title"
            ],
            "properties": {
                "author": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "John Smith"
                },
                "page": {
                    "type": "integer",
                    "example": 205
                },
                "title": {
                    "type": "string",
                    "example": "How To Become Backend Engineer"
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_book.DeleteSuccesfully": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "delete successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_book.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "something went wrong"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_book.InvalidId": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid id"
                },
                "message": {
                    "type": "string",
                    "example": "Your id is invalid"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_book.MissingAuthorization": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "missing authorization header"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_book.SuccessGetBook": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_domain_book.Book"
                },
                "message": {
                    "type": "string",
                    "example": "successfully get the book"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_book.SuccessGetListBook": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_domain_book.Book"
                },
                "message": {
                    "type": "string",
                    "example": "successfully get list book"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_book.SuccessfullCreate": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_domain_book.Book"
                },
                "message": {
                    "type": "string",
                    "example": "successfully add the book"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_book.SuccessfullUpdate": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_domain_book.Book"
                },
                "message": {
                    "type": "string",
                    "example": "update successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_qhmd_gitforgits_internal_dto_book.TitleAlreadytaken": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "book with this title already exists"
                },
                "message": {
                    "type": "string",
                    "example": "Title already exist, choose another titile"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "users.EmailAlreadyUsed": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "this is email already used"
                },
                "message": {
                    "type": "string",
                    "example": "Email already exist, choose another Email"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "users.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "something went wrong"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "users.InvalidId": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid id"
                },
                "message": {
                    "type": "string",
                    "example": "Your id is invalid"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "users.SuccessDeleteUser": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "success delete user"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "users.SuccessGetList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_domain_auth.Auth"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "successfully get list user"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "users.SuccessGetUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_qhmd_gitforgits_internal_domain_auth.Auth"
                },
                "message": {
                    "type": "string",
                    "example": "successfully get the user"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "users.UpdateRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "admin"
                    ]
                }
            }
        },
        "users.UserNotFoundResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "string",
                    "example": "user with id {id} does not exist"
                },
                "message": {
                    "type": "string",
                    "example": "user not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}